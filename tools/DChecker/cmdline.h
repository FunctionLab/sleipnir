/* cmdline.h */

/* File autogenerated by gengetopt version 2.13.1  */

#ifndef CMDLINE_H
#define CMDLINE_H

/* If we use autoconf.  */
#ifdef HAVE_CONFIG_H
#include "config.h"
#endif

#ifdef __cplusplus
extern "C" {
#endif /* __cplusplus */

#ifndef CMDLINE_PARSER_PACKAGE
#define CMDLINE_PARSER_PACKAGE "DChecker"
#endif

#ifndef CMDLINE_PARSER_VERSION
#define CMDLINE_PARSER_VERSION "1.0"
#endif

struct gengetopt_args_info
{
  char * input_arg;	/* Correlation file.  */
  char * answers_arg;	/* Answer file.  */
  int invert_flag;	/* Invert correlations to distances (default=off).  */
  int normalize_flag;	/* Normlize scores before processing (default=off).  */
  float min_arg;	/* Minimum correlation to process (default='0').  */
  float max_arg;	/* Maximum correlation to process (default='1').  */
  double delta_arg;	/* Size of correlation bins (default='0.01').  */
  int bins_arg;	/* Bins for quantile sorting (default='0').  */
  int finite_flag;	/* Count finitely many bins (default=off).  */
  char * directory_arg;	/* Output directory (default='.').  */
  char * genes_arg;	/* Gene inclusion file.  */
  char * genex_arg;	/* Gene exclusion file.  */
  char * genet_arg;	/* Term inclusion file.  */
  char * genee_arg;	/* Edge inclusion file.  */
  int sse_flag;	/* Calculate sum of squared errors (default=off).  */
  int verbosity_arg;	/* Message verbosity (default='5').  */
  int memmap_flag;	/* Memory map input DABs (default=off).  */
  int unannotated_flag;	/* Include unannotated genes in standard (default=off).  */
  
  int help_given ;	/* Whether help was given.  */
  int version_given ;	/* Whether version was given.  */
  int input_given ;	/* Whether input was given.  */
  int answers_given ;	/* Whether answers was given.  */
  int invert_given ;	/* Whether invert was given.  */
  int normalize_given ;	/* Whether normalize was given.  */
  int min_given ;	/* Whether min was given.  */
  int max_given ;	/* Whether max was given.  */
  int delta_given ;	/* Whether delta was given.  */
  int bins_given ;	/* Whether bins was given.  */
  int finite_given ;	/* Whether finite was given.  */
  int directory_given ;	/* Whether directory was given.  */
  int genes_given ;	/* Whether genes was given.  */
  int genex_given ;	/* Whether genex was given.  */
  int genet_given ;	/* Whether genet was given.  */
  int genee_given ;	/* Whether genee was given.  */
  int sse_given ;	/* Whether sse was given.  */
  int verbosity_given ;	/* Whether verbosity was given.  */
  int memmap_given ;	/* Whether memmap was given.  */
  int unannotated_given ;	/* Whether unannotated was given.  */

  char **inputs ; /* unamed options */
  unsigned inputs_num ; /* unamed options number */
} ;

int cmdline_parser (int argc, char * const *argv, struct gengetopt_args_info *args_info);
int cmdline_parser2 (int argc, char * const *argv, struct gengetopt_args_info *args_info, int override, int initialize, int check_required);

void cmdline_parser_print_help(void);
void cmdline_parser_print_version(void);

void cmdline_parser_init (struct gengetopt_args_info *args_info);
void cmdline_parser_free (struct gengetopt_args_info *args_info);

int cmdline_parser_required (struct gengetopt_args_info *args_info, const char *prog_name);


#ifdef __cplusplus
}
#endif /* __cplusplus */
#endif /* CMDLINE_H */
