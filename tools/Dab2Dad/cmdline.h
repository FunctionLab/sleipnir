/* cmdline.h */

/* File autogenerated by gengetopt version 2.13.1  */

#ifndef CMDLINE_H
#define CMDLINE_H

/* If we use autoconf.  */
#ifdef HAVE_CONFIG_H
#include "config.h"
#endif

#ifdef __cplusplus
extern "C" {
#endif /* __cplusplus */

#ifndef CMDLINE_PARSER_PACKAGE
#define CMDLINE_PARSER_PACKAGE "Dab2Dad"
#endif

#ifndef CMDLINE_PARSER_VERSION
#define CMDLINE_PARSER_VERSION "1.0"
#endif

struct gengetopt_args_info
{
  char * input_arg;	/* Input dad file.  */
  char * load_arg;	/* Persistent load dad file.  */
  char * network_arg;	/* Input Bayesian network [x]dsl.  */
  char * output_arg;	/* Output dad file.  */
  char * answers_arg;	/* Answer dab file.  */
  char * directory_arg;	/* Directory with dab files (default='.').  */
  char * mask_arg;	/* Mask dab file.  */
  int verbosity_arg;	/* Message verbosity (default='5').  */
  char * genes_arg;	/* Gene inclusion file.  */
  char * genex_arg;	/* Gene exclusion file.  */
  int everything_flag;	/* Include pairs without answers (default=off).  */
  int memmap_flag;	/* Memory map input/output (default=off).  */
  char * lookup1_arg;	/* First lookup gene.  */
  char * lookup2_arg;	/* Second lookup gene.  */
  char * lookups_arg;	/* Lookup gene set.  */
  char * lookupp_arg;	/* Lookup pair set.  */
  
  int help_given ;	/* Whether help was given.  */
  int version_given ;	/* Whether version was given.  */
  int input_given ;	/* Whether input was given.  */
  int load_given ;	/* Whether load was given.  */
  int network_given ;	/* Whether network was given.  */
  int output_given ;	/* Whether output was given.  */
  int answers_given ;	/* Whether answers was given.  */
  int directory_given ;	/* Whether directory was given.  */
  int mask_given ;	/* Whether mask was given.  */
  int verbosity_given ;	/* Whether verbosity was given.  */
  int genes_given ;	/* Whether genes was given.  */
  int genex_given ;	/* Whether genex was given.  */
  int everything_given ;	/* Whether everything was given.  */
  int memmap_given ;	/* Whether memmap was given.  */
  int lookup1_given ;	/* Whether lookup1 was given.  */
  int lookup2_given ;	/* Whether lookup2 was given.  */
  int lookups_given ;	/* Whether lookups was given.  */
  int lookupp_given ;	/* Whether lookupp was given.  */

  char **inputs ; /* unamed options */
  unsigned inputs_num ; /* unamed options number */
  int input_output_group_counter; /* counter for group input_output */
} ;

int cmdline_parser (int argc, char * const *argv, struct gengetopt_args_info *args_info);
int cmdline_parser2 (int argc, char * const *argv, struct gengetopt_args_info *args_info, int override, int initialize, int check_required);

void cmdline_parser_print_help(void);
void cmdline_parser_print_version(void);

void cmdline_parser_init (struct gengetopt_args_info *args_info);
void cmdline_parser_free (struct gengetopt_args_info *args_info);

int cmdline_parser_required (struct gengetopt_args_info *args_info, const char *prog_name);


#ifdef __cplusplus
}
#endif /* __cplusplus */
#endif /* CMDLINE_H */
