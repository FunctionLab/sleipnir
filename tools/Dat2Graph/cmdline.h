/* cmdline.h */

/* File autogenerated by gengetopt version 2.13.1  */

#ifndef CMDLINE_H
#define CMDLINE_H

/* If we use autoconf.  */
#ifdef HAVE_CONFIG_H
#include "config.h"
#endif

#ifdef __cplusplus
extern "C" {
#endif /* __cplusplus */

#ifndef CMDLINE_PARSER_PACKAGE
#define CMDLINE_PARSER_PACKAGE "Dat2Graph"
#endif

#ifndef CMDLINE_PARSER_VERSION
#define CMDLINE_PARSER_VERSION "1.0"
#endif

struct gengetopt_args_info
{
  char * input_arg;	/* Input dab file.  */
  char * format_arg;	/* Output graph format (default='dot').  */
  double cutoff_arg;	/* Minimum edge weight for output.  */
  char * features_arg;	/* SGD gene features.  */
  int verbosity_arg;	/* Message verbosity (default='5').  */
  char * config_arg;	/* Command line config file (default='Dat2Graph.ini').  */
  int memmap_flag;	/* Memory map input file (default=off).  */
  int normalize_flag;	/* Normalize edge weights before processing (default=off).  */
  int neighbors_arg;	/* Size of Pixie neighborhood (default='-1').  */
  char * genes_arg;	/* Gene inclusion file.  */
  char * geneq_arg;	/* Query inclusion file.  */
  char * knowns_arg;	/* Known interactions (DAT) to ignore.  */
  char * colors_arg;	/* Colors for graph nodes.  */
  char * borders_arg;	/* Borders for graph nodes.  */
  
  int help_given ;	/* Whether help was given.  */
  int version_given ;	/* Whether version was given.  */
  int input_given ;	/* Whether input was given.  */
  int format_given ;	/* Whether format was given.  */
  int cutoff_given ;	/* Whether cutoff was given.  */
  int features_given ;	/* Whether features was given.  */
  int verbosity_given ;	/* Whether verbosity was given.  */
  int config_given ;	/* Whether config was given.  */
  int memmap_given ;	/* Whether memmap was given.  */
  int normalize_given ;	/* Whether normalize was given.  */
  int neighbors_given ;	/* Whether neighbors was given.  */
  int genes_given ;	/* Whether genes was given.  */
  int geneq_given ;	/* Whether geneq was given.  */
  int knowns_given ;	/* Whether knowns was given.  */
  int colors_given ;	/* Whether colors was given.  */
  int borders_given ;	/* Whether borders was given.  */

} ;

int cmdline_parser (int argc, char * const *argv, struct gengetopt_args_info *args_info);
int cmdline_parser2 (int argc, char * const *argv, struct gengetopt_args_info *args_info, int override, int initialize, int check_required);

void cmdline_parser_print_help(void);
void cmdline_parser_print_version(void);

void cmdline_parser_init (struct gengetopt_args_info *args_info);
void cmdline_parser_free (struct gengetopt_args_info *args_info);

int cmdline_parser_configfile (char * const filename, struct gengetopt_args_info *args_info, int override, int initialize, int check_required);

int cmdline_parser_required (struct gengetopt_args_info *args_info, const char *prog_name);

extern char *format_values[] ;	/* Possible values for format.  */


#ifdef __cplusplus
}
#endif /* __cplusplus */
#endif /* CMDLINE_H */
