/* cmdline.h */

/* File autogenerated by gengetopt version 2.13.1  */

#ifndef CMDLINE_H
#define CMDLINE_H

/* If we use autoconf.  */
#ifdef HAVE_CONFIG_H
#include "config.h"
#endif

#ifdef __cplusplus
extern "C" {
#endif /* __cplusplus */

#ifndef CMDLINE_PARSER_PACKAGE
#define CMDLINE_PARSER_PACKAGE "Seqs2Ngrams"
#endif

#ifndef CMDLINE_PARSER_VERSION
#define CMDLINE_PARSER_VERSION "1.0"
#endif

struct gengetopt_args_info
{
  char * input_arg;	/* Sequence input file.  */
  char * output_arg;	/* DAB output file.  */
  int n_arg;	/* N-gram size (default='8').  */
  char * genes_arg;	/* Gene inclusion file.  */
  int normalize_flag;	/* Normalize to the range [0,1] (default=off).  */
  int zscore_flag;	/* Convert values to z-scores (default=off).  */
  int verbosity_arg;	/* Message verbosity (default='5').  */
  
  int help_given ;	/* Whether help was given.  */
  int version_given ;	/* Whether version was given.  */
  int input_given ;	/* Whether input was given.  */
  int output_given ;	/* Whether output was given.  */
  int n_given ;	/* Whether n was given.  */
  int genes_given ;	/* Whether genes was given.  */
  int normalize_given ;	/* Whether normalize was given.  */
  int zscore_given ;	/* Whether zscore was given.  */
  int verbosity_given ;	/* Whether verbosity was given.  */

} ;

int cmdline_parser (int argc, char * const *argv, struct gengetopt_args_info *args_info);
int cmdline_parser2 (int argc, char * const *argv, struct gengetopt_args_info *args_info, int override, int initialize, int check_required);

void cmdline_parser_print_help(void);
void cmdline_parser_print_version(void);

void cmdline_parser_init (struct gengetopt_args_info *args_info);
void cmdline_parser_free (struct gengetopt_args_info *args_info);

int cmdline_parser_required (struct gengetopt_args_info *args_info, const char *prog_name);


#ifdef __cplusplus
}
#endif /* __cplusplus */
#endif /* CMDLINE_H */
