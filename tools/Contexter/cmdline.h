/* cmdline.h */

/* File autogenerated by gengetopt version 2.13.1  */

#ifndef CMDLINE_H
#define CMDLINE_H

/* If we use autoconf.  */
#ifdef HAVE_CONFIG_H
#include "config.h"
#endif

#ifdef __cplusplus
extern "C" {
#endif /* __cplusplus */

#ifndef CMDLINE_PARSER_PACKAGE
#define CMDLINE_PARSER_PACKAGE "Contexter"
#endif

#ifndef CMDLINE_PARSER_VERSION
#define CMDLINE_PARSER_VERSION "1.0"
#endif

struct gengetopt_args_info
{
  char * input_arg;	/* DAT file/Context IDs and names.  */
  int verbosity_arg;	/* Message verbosity (default='5').  */
  int dat_flag;	/* Use DAT file input rather than Bayes nets (default=off).  */
  char * database_arg;	/* Database directory (default='.').  */
  char * genes_arg;	/* Gene ID to name.  */
  int context_arg;	/* Context ID to process.  */
  char * contexts_arg;	/* Context/gene mapping.  */
  char * networks_arg;	/* Bayes net directory (default='.').  */
  char * default_arg;	/* Bayes net for no context.  */
  int xdsl_flag;	/* Use XDSL files instead of DSL (default=on).  */
  int minimal_in_flag;	/* Read stored contexts and minimal Bayes nets (default=off).  */
  char * minimal_out_arg;	/* Store contexts and minimal Bayes nets.  */
  char * lookup_arg;	/* Gene name to lookup.  */
  int memmap_flag;	/* Memory map input (default=off).  */
  
  int help_given ;	/* Whether help was given.  */
  int version_given ;	/* Whether version was given.  */
  int input_given ;	/* Whether input was given.  */
  int verbosity_given ;	/* Whether verbosity was given.  */
  int dat_given ;	/* Whether dat was given.  */
  int database_given ;	/* Whether database was given.  */
  int genes_given ;	/* Whether genes was given.  */
  int context_given ;	/* Whether context was given.  */
  int contexts_given ;	/* Whether contexts was given.  */
  int networks_given ;	/* Whether networks was given.  */
  int default_given ;	/* Whether default was given.  */
  int xdsl_given ;	/* Whether xdsl was given.  */
  int minimal_in_given ;	/* Whether minimal_in was given.  */
  int minimal_out_given ;	/* Whether minimal_out was given.  */
  int lookup_given ;	/* Whether lookup was given.  */
  int memmap_given ;	/* Whether memmap was given.  */

} ;

int cmdline_parser (int argc, char * const *argv, struct gengetopt_args_info *args_info);
int cmdline_parser2 (int argc, char * const *argv, struct gengetopt_args_info *args_info, int override, int initialize, int check_required);

void cmdline_parser_print_help(void);
void cmdline_parser_print_version(void);

void cmdline_parser_init (struct gengetopt_args_info *args_info);
void cmdline_parser_free (struct gengetopt_args_info *args_info);

int cmdline_parser_required (struct gengetopt_args_info *args_info, const char *prog_name);


#ifdef __cplusplus
}
#endif /* __cplusplus */
#endif /* CMDLINE_H */
