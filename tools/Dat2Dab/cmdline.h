/* cmdline.h */

/* File autogenerated by gengetopt version 2.13.1  */

#ifndef CMDLINE_H
#define CMDLINE_H

/* If we use autoconf.  */
#ifdef HAVE_CONFIG_H
#include "config.h"
#endif

#ifdef __cplusplus
extern "C" {
#endif /* __cplusplus */

#ifndef CMDLINE_PARSER_PACKAGE
#define CMDLINE_PARSER_PACKAGE "Dat2Dab"
#endif

#ifndef CMDLINE_PARSER_VERSION
#define CMDLINE_PARSER_VERSION "1.0"
#endif

struct gengetopt_args_info
{
  char * input_arg;	/* Input data file.  */
  char * output_arg;	/* Output data file.  */
  int flip_flag;	/* Calculate one minus dat values (default=off).  */
  int normalize_flag;	/* Normalize to the range [0,1] (default=off).  */
  int zscore_flag;	/* Convert values to z-scores (default=off).  */
  char * genes_arg;	/* Process only genes from the given subset.  */
  int skip_arg;	/* Columns to skip in input PCL (default='2').  */
  int rank_flag;	/* Rank transform data (default=off).  */
  int memmap_flag;	/* Memory map input/output (default=off).  */
  double cutoff_arg;	/* Exclude edges below cutoff.  */
  int verbosity_arg;	/* Message verbosity (default='5').  */
  int zero_flag;	/* Zero missing values (default=off).  */
  int duplicates_flag;	/* Allow dissimilar duplicate values (default=off).  */
  char * lookup1_arg;	/* First lookup gene.  */
  char * lookup2_arg;	/* Second lookup gene.  */
  char * lookups_arg;	/* Lookup gene set.  */
  char * remap_arg;	/* Gene name remapping file.  */
  int genelist_flag;	/* Only list genes (default=off).  */
  int table_flag;	/* Produce table formatted output (default=off).  */
  
  int help_given ;	/* Whether help was given.  */
  int version_given ;	/* Whether version was given.  */
  int input_given ;	/* Whether input was given.  */
  int output_given ;	/* Whether output was given.  */
  int flip_given ;	/* Whether flip was given.  */
  int normalize_given ;	/* Whether normalize was given.  */
  int zscore_given ;	/* Whether zscore was given.  */
  int genes_given ;	/* Whether genes was given.  */
  int skip_given ;	/* Whether skip was given.  */
  int rank_given ;	/* Whether rank was given.  */
  int memmap_given ;	/* Whether memmap was given.  */
  int cutoff_given ;	/* Whether cutoff was given.  */
  int verbosity_given ;	/* Whether verbosity was given.  */
  int zero_given ;	/* Whether zero was given.  */
  int duplicates_given ;	/* Whether duplicates was given.  */
  int lookup1_given ;	/* Whether lookup1 was given.  */
  int lookup2_given ;	/* Whether lookup2 was given.  */
  int lookups_given ;	/* Whether lookups was given.  */
  int remap_given ;	/* Whether remap was given.  */
  int genelist_given ;	/* Whether genelist was given.  */
  int table_given ;	/* Whether table was given.  */

} ;

int cmdline_parser (int argc, char * const *argv, struct gengetopt_args_info *args_info);
int cmdline_parser2 (int argc, char * const *argv, struct gengetopt_args_info *args_info, int override, int initialize, int check_required);

void cmdline_parser_print_help(void);
void cmdline_parser_print_version(void);

void cmdline_parser_init (struct gengetopt_args_info *args_info);
void cmdline_parser_free (struct gengetopt_args_info *args_info);

int cmdline_parser_required (struct gengetopt_args_info *args_info, const char *prog_name);


#ifdef __cplusplus
}
#endif /* __cplusplus */
#endif /* CMDLINE_H */
