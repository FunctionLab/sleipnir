/* cmdline.h */

/* File autogenerated by gengetopt version 2.13.1  */

#ifndef CMDLINE_H
#define CMDLINE_H

/* If we use autoconf.  */
#ifdef HAVE_CONFIG_H
#include "config.h"
#endif

#ifdef __cplusplus
extern "C" {
#endif /* __cplusplus */

#ifndef CMDLINE_PARSER_PACKAGE
#define CMDLINE_PARSER_PACKAGE "MEFIT"
#endif

#ifndef CMDLINE_PARSER_VERSION
#define CMDLINE_PARSER_VERSION "1.2"
#endif

struct gengetopt_args_info
{
  char * related_arg;	/* Directory containing lists of known related genes.  */
  char * unrelated_arg;	/* List of known unrelated gene pairs.  */
  char * output_arg;	/* Directory to contain learned per-function Bayesian networks.  */
  char * global_arg;	/* Global learned Bayesian network.  */
  char * predictions_arg;	/* Directory to contain predicted probabilities of functional relationship.  */
  char * trusts_arg;	/* Trust scores learned per data set and function.  */
  char * bins_arg;	/* Tab separated bin cutoffs.  */
  char * distance_arg;	/* Distance measure (default='pearnorm').  */
  char * genes_arg;	/* Subset of genes to include in evaluation.  */
  char * genex_arg;	/* Subset of genes to exclude from evaluation.  */
  int random_arg;	/* Seed random generator (default='0').  */
  int skip_arg;	/* Additional columns to skip in input PCLs (default='2').  */
  int verbosity_arg;	/* Message verbosity (default='5').  */
  int xdsl_flag;	/* Output .xdsl files in place of .dsls (default=on).  */
  int zero_flag;	/* Zero missing values (default=off).  */
  double cutoff_arg;	/* Include only confidences above cutoff (default='0').  */
  
  int help_given ;	/* Whether help was given.  */
  int version_given ;	/* Whether version was given.  */
  int related_given ;	/* Whether related was given.  */
  int unrelated_given ;	/* Whether unrelated was given.  */
  int output_given ;	/* Whether output was given.  */
  int global_given ;	/* Whether global was given.  */
  int predictions_given ;	/* Whether predictions was given.  */
  int trusts_given ;	/* Whether trusts was given.  */
  int bins_given ;	/* Whether bins was given.  */
  int distance_given ;	/* Whether distance was given.  */
  int genes_given ;	/* Whether genes was given.  */
  int genex_given ;	/* Whether genex was given.  */
  int random_given ;	/* Whether random was given.  */
  int skip_given ;	/* Whether skip was given.  */
  int verbosity_given ;	/* Whether verbosity was given.  */
  int xdsl_given ;	/* Whether xdsl was given.  */
  int zero_given ;	/* Whether zero was given.  */
  int cutoff_given ;	/* Whether cutoff was given.  */

  char **inputs ; /* unamed options */
  unsigned inputs_num ; /* unamed options number */
} ;

int cmdline_parser (int argc, char * const *argv, struct gengetopt_args_info *args_info);
int cmdline_parser2 (int argc, char * const *argv, struct gengetopt_args_info *args_info, int override, int initialize, int check_required);

void cmdline_parser_print_help(void);
void cmdline_parser_print_version(void);

void cmdline_parser_init (struct gengetopt_args_info *args_info);
void cmdline_parser_free (struct gengetopt_args_info *args_info);

int cmdline_parser_required (struct gengetopt_args_info *args_info, const char *prog_name);

extern char *distance_values[] ;	/* Possible values for distance.  */


#ifdef __cplusplus
}
#endif /* __cplusplus */
#endif /* CMDLINE_H */
